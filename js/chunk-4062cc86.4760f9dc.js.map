{"version":3,"sources":["webpack:///./node_modules/n3/src/N3Store.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/internal/streams/state.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/internal/streams/async_iterator.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/_stream_transform.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/_stream_writable.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/internal/streams/pipeline.js","webpack:///./node_modules/n3/src/N3Parser.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","webpack:///./node_modules/string_decoder/lib/string_decoder.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/_stream_readable.js","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/queue-microtask/index.js","webpack:///./node_modules/n3/src/N3DataFactory.js","webpack:///./node_modules/n3/src/N3Writer.js","webpack:///./node_modules/n3/src/N3Util.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:///./node_modules/n3/node_modules/readable-stream/errors-browser.js","webpack:///./node_modules/n3/node_modules/readable-stream/readable-browser.js","webpack:///./node_modules/util-deprecate/browser.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/internal/streams/from-browser.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/internal/streams/buffer_list.js","webpack:///./node_modules/n3/node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./node_modules/n3/src/N3Lexer.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/n3/src/IRIs.js"],"names":["N3Store","quads","options","this","_size","_graphs","Object","create","_id","_ids","_entities","_blankNodeIndex","_factory","factory","addQuads","size","graphs","subjects","subject","graphKey","subjectKey","predicateKey","keys","length","index0","key0","key1","key2","index1","index2","existed","key","name0","name1","name2","graph","callback","array","tmp","varCount","entityKeys","value0","entity0","value1","entity1","values","l","parts","predicate","object","quad","push","count","isString","uniqueIds","id","graphItem","predicates","objects","freeze","ids","entities","changed","_addToIndex","i","addQuad","stream","on","_removeFromIndex","removeQuad","remove","match","removeMatches","_getGraphs","content","subjectId","predicateId","objectId","graphId","_findInIndex","objectMode","_read","getQuads","_countInIndex","some","every","results","forSubjects","s","_uniqueEntities","_loopBy2Keys","_loopByKey1","_loopByKey0","_loop","forPredicates","p","forObjects","o","forGraphs","g","suggestedName","name","index","blankNode","substr","ignoreErrors","lists","onError","node","message","Error","value","tails","rdf","rest","nil","toRemove","forEach","tailQuad","items","head","headPos","malformed","current","objectQuads","subjectQuads","first","parent","equals","unshift","removeQuads","String","objectKeys","obj","module","exports","Duplex","Readable","Writable","prototype","v","method","call","allowHalfOpen","readable","writable","once","onend","_writableState","ended","process","nextTick","onEndNT","self","end","defineProperty","enumerable","get","highWaterMark","getBuffer","undefined","_readableState","destroyed","set","ERR_INVALID_OPT_VALUE","codes","highWaterMarkFrom","isDuplex","duplexKey","getHighWaterMark","state","hwm","isFinite","Math","floor","_Object$setPrototypeO","_defineProperty","configurable","finished","kLastResolve","Symbol","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","done","readAndResolve","iter","resolve","data","read","onReadable","wrapForNext","lastPromise","reject","then","AsyncIteratorPrototype","getPrototypeOf","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","next","_this","error","Promise","promise","asyncIterator","_this2","destroy","err","createReadableStreamAsyncIterator","_Object$create","iterator","endEmitted","code","bind","PassThrough","Transform","_transform","chunk","encoding","cb","_require$codes","ERR_METHOD_NOT_IMPLEMENTED","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","er","ts","_transformState","transforming","writecb","emit","writechunk","rs","reading","needReadable","needTransform","writeencoding","sync","transform","flush","_flush","prefinish","_write","n","_destroy","err2","ctor","superCtor","super_","constructor","TempCtor","CorkedRequest","entry","finish","onCorkedFinish","WritableState","internalUtil","deprecate","Stream","Buffer","OurUint8Array","global","Uint8Array","_uint8ArrayToBuffer","from","_isUint8Array","isBuffer","realHasInstance","destroyImpl","_require","ERR_INVALID_ARG_TYPE","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","errorOrDestroy","nop","writableObjectMode","finalCalled","needDrain","ending","noDecode","decodeStrings","defaultEncoding","writing","corked","bufferProcessing","onwrite","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","emitClose","autoDestroy","bufferedRequestCount","corkedRequestsFree","write","writev","_writev","final","_final","writeAfterEnd","validChunk","decodeChunk","writeOrBuffer","isBuf","newChunk","len","ret","last","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","buffer","Array","holder","allBuffers","callFinal","need","rState","endWritable","corkReq","out","_","hasInstance","Function","pipe","cork","uncork","setDefaultEncoding","toLowerCase","indexOf","_undestroy","undestroy","eos","called","apply","arguments","ERR_MISSING_ARGS","noop","isRequest","setHeader","abort","destroyer","closed","fn","to","popCallback","streams","pop","pipeline","_len","_key","isArray","destroys","map","reduce","blankNodePrefix","N3Parser","_contextStack","_graph","_setBase","baseIRI","initDataFactory","format","isTurtle","test","isTriG","isNTriples","isNQuads","isN3","_n3Mode","isLineMode","_supportsNamedGraphs","_readPredicateOrNamedGraph","_readPredicate","_supportsQuads","_supportsRDFStar","_resolveRelativeIRI","iri","_blankNodePrefix","replace","_lexer","lexer","lineMode","n3","_explicitQuantifiers","explicitQuantifiers","fragmentPos","_base","_basePath","_baseRoot","_baseScheme","type","n3Mode","inverse","_inversePredicate","blankPrefix","_prefixes","quantified","_quantified","context","_subject","_predicate","_object","token","_error","_callback","_sparqlStyle","_readPrefix","_readBaseIRI","_readSubject","_readNamedGraphLabel","quantifier","_resolveIRI","_namedNode","prefix","_blankNode","_variable","_saveContext","_readBlankNodeHead","RDF_NIL","_readListItem","_readPunctuation","N3_FORSOME","_quantifier","_readQuantifierList","N3_FORALL","_literalValue","_completeSubjectLiteral","_literal","_readEntity","_getPathReader","ABBREVIATIONS","_readBlankNodeTail","_readObject","_readDataTypeOrLang","_getContextEndReader","_readGraph","_readBlankNodePunctuation","_emit","empty","_restoreContext","_readPredicateAfterBlank","item","list","previousList","stack","RDF_FIRST","_readListItemDataTypeOrLang","RDF_REST","_completeObjectLiteral","literal","datatype","_completeLiteral","listItem","completed","_readCallback","inversePredicate","_readFormulaTail","_readInTopContext","_readQuadPunctuation","_prefix","_readPrefixIRI","prefixNode","_prefixCallback","_readDeclarationPunctuation","_readNamedGraphBlankLabel","entity","DEFAULTGRAPH","QUANTIFIERS_GRAPH","_readQuantifierPunctuation","afterPath","_afterPath","_readPath","_readForwardPath","_readBackwardPath","_readRDFStarTail","_quad","contextStack","_readRDFStarTailOrGraph","line","previousToken","_removeDotSegments","result","pathStart","segmentStart","substring","lastIndexOf","input","quadCallback","prefixCallback","e","t","tokenize","parser","namedNode","variable","defaultGraph","r","forAll","forSome","owl","sameAs","log","implies","ERR_STREAM_PREMATURE_CLOSE","args","opts","onlegacyfinish","onfinish","writableEnded","readableEnded","onerror","onclose","onrequest","req","removeListener","isEncoding","_normalizeEncoding","enc","retried","normalizeEncoding","nenc","StringDecoder","nb","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","allocUnsafe","utf8CheckByte","byte","utf8CheckIncomplete","buf","j","utf8CheckExtraBytes","copy","toString","utf8Text","total","utf8End","c","charCodeAt","slice","ReadableState","EventEmitter","EElistenerCount","emitter","listeners","debug","debugUtil","debuglog","BufferList","ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","kProxyEvents","prependListener","event","_events","readableObjectMode","pipes","pipesCount","flowing","emittedReadable","readableListening","resumeScheduled","paused","awaitDrain","readingMore","decoder","readableAddChunk","addToFront","skipChunkCheck","onEofChunk","chunkInvalid","addChunk","maybeReadMore","emitReadable","isPaused","setEncoding","clear","MAX_HWM","computeNewHighWaterMark","howMuchToRead","emitReadable_","flow","maybeReadMore_","pipeOnDrain","src","updateReadableListening","listenerCount","resume","nReadingNextTick","resume_","fromList","shift","join","concat","consume","endReadable","endReadableNT","wState","xs","x","parseInt","nOrig","doRead","dest","pipeOpts","doEnd","stdout","stderr","endFn","unpipe","onunpipe","unpipeInfo","hasUnpiped","cleanup","ondrain","cleanedUp","ondata","pause","dests","splice","ev","res","addListener","removeAllListeners","wrap","_fromList","iterable","copyProps","dst","SafeBuffer","arg","encodingOrOffset","alloc","allocUnsafeSlow","TypeError","fill","SlowBuffer","queueMicrotask","globalThis","catch","setTimeout","xsd","_blankNodeCounter","escapedLiteral","quadId","DataFactory","triple","Term","other","termType","NamedNode","Literal","atPos","datatypeString","dtPos","char","string","langString","language","BlankNode","super","Variable","DefaultGraph","termFromId","endPos","components","exec","unescapeQuotes","termToId","term","escapeQuotes","Quad","toJSON","quoted","languageOrDataType","boolean","Number","isInteger","integer","double","isNaN","escape","escapeAll","escapedCharacters","SerializedTerm","N3Writer","outputStream","_prefixRegex","_lists","_outputStream","_endStream","output","_writeQuad","_writeQuadLine","_prefixIRIs","prefixes","addPrefixes","_inDefaultGraph","_encodeIriOrBlank","_encodeObject","_encodePredicate","_encodeSubject","_prefixMatch","quadToString","_encodeQuad","characterReplacer","prefixMatch","_encodeLiteral","hasPrefixes","IRIlist","prefixList","prefixIRI","RegExp","child","children","contents","elements","_blockedWrite","singleDone","character","isNamedNode","isBlankNode","isLiteral","isVariable","isDefaultGraph","inDefaultGraph","defaultPrefixes","processPrefix","cache","local","readableDestroyed","writableDestroyed","emitErrorNT","emitCloseNT","emitErrorAndCloseNT","_inheritsLoose","subClass","superClass","__proto__","createErrorType","Base","getMessage","arg1","arg2","arg3","NodeError","_Base","oneOf","expected","thing","startsWith","str","search","pos","endsWith","this_len","includes","start","actual","determiner","msg","config","warned","deprecated","console","trace","warn","localStorage","val","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","target","source","getOwnPropertyDescriptors","defineProperties","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_require2","inspect","custom","copyBuffer","offset","tail","hasStrings","_getString","_getBuffer","depth","customInspect","escapeSequence","escapeReplacements","illegalIriChars","lineModeRegExps","_iri","_unescapedIri","_simpleQuotedString","_langcode","_blank","_newline","_comment","_whitespace","_endOfFile","invalidRegExp","N3Lexer","_simpleApostropheString","_prefixed","_number","_boolean","_keyword","_sparqlKeyword","_shortPredicates","_lineMode","_comments","comments","_literalClosingPos","inputFinished","_input","outputComments","whiteSpaceMatch","comment","_line","firstChar","matchLength","inconclusive","_previousMarker","_unescape","reportSyntaxError","_parseLiteral","decimal","toUpperCase","_syntaxError","invalid","replaced","sequence","unicode4","unicode8","escapedChar","fromCharCode","charCode","opening","openingLength","closingPos","max","backslashCount","raw","lines","split","issue","tokens","_tokenizeToEnd","_pendingBuffer","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","ProcessEmitWarning","warning","getOwnPropertyNames","NumberIsNaN","init","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","m","events","existing","newListener","w","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","arr","spliceOne","eventListener","errorListener","RangeError","setMaxListeners","getMaxListeners","doError","handler","prependOnceListener","position","originalListener","off","rawListeners","eventNames","RDF","XSD","SWAP"],"mappings":"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","file":"js/chunk-4062cc86.4760f9dc.js","sourcesContent":["// **N3Store** objects store N3 quads by graph in memory.\nimport { default as N3DataFactory, termToId, termFromId } from './N3DataFactory';\nimport { Readable } from 'readable-stream';\nimport namespaces from './IRIs';\n\n// ## Constructor\nexport default class N3Store {\n  constructor(quads, options) {\n    // The number of quads is initially zero\n    this._size = 0;\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null);\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0;\n    this._ids = Object.create(null);\n    this._ids['><'] = 0; // dummy entry, so the first actual key is non-zero\n    this._entities = Object.create(null); // inverse of `_ids`\n    // `_blankNodeIndex` is the index of the last automatically named blank node\n    this._blankNodeIndex = 0;\n\n    // Shift parameters if `quads` is not given\n    if (!options && quads && !quads[0])\n      options = quads, quads = null;\n    options = options || {};\n    this._factory = options.factory || N3DataFactory;\n\n    // Add quads if passed\n    if (quads)\n      this.addQuads(quads);\n  }\n\n  // ## Public properties\n\n  // ### `size` returns the number of quads in the store\n  get size() {\n    // Return the quad count if if was cached\n    let size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0;\n    const graphs = this._graphs;\n    let subjects, subject;\n    for (const graphKey in graphs)\n      for (const subjectKey in (subjects = graphs[graphKey].subjects))\n        for (const predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex(index0, key0, key1, key2) {\n    // Create layers as necessary\n    const index1 = index0[key0] || (index0[key0] = {});\n    const index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signals the presence of the quad\n    const existed = key2 in index2;\n    if (!existed)\n      index2[key2] = null;\n    return !existed;\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex(index0, key0, key1, key2) {\n    // Remove the quad from the index\n    const index1 = index0[key0], index2 = index1[key1];\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty\n    for (const key in index2) return;\n    delete index1[key1];\n    for (const key in index1) return;\n    delete index0[key0];\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created quads.\n  // If `callback` is given, each result is passed through it\n  // and iteration halts when it returns truthy for any quad.\n  // If instead `array` is given, each result is added to the array.\n  _findInIndex(index0, key0, key1, key2, name0, name1, name2, graph, callback, array) {\n    let tmp, index1, index2;\n    // Depending on the number of variables, keys or reverse index are faster\n    const varCount = !key0 + !key1 + !key2,\n        entityKeys = varCount > 1 ? Object.keys(this._ids) : this._entities;\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      const entity0 = entityKeys[value0];\n\n      if (index1 = index0[value0]) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          const entity1 = entityKeys[value1];\n\n          if (index2 = index1[value1]) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            const values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create quads for all items found in index 2.\n            for (let l = 0; l < values.length; l++) {\n              const parts = { subject: null, predicate: null, object: null };\n              parts[name0] = termFromId(entity0, this._factory);\n              parts[name1] = termFromId(entity1, this._factory);\n              parts[name2] = termFromId(entityKeys[values[l]], this._factory);\n              const quad = this._factory.quad(\n                parts.subject, parts.predicate, parts.object, termFromId(graph, this._factory));\n              if (array)\n                array.push(quad);\n              else if (callback(quad))\n                return true;\n            }\n          }\n        }\n      }\n    }\n    return array;\n  }\n\n  // ### `_loop` executes the callback on all keys of index 0\n  _loop(index0, callback) {\n    for (const key0 in index0)\n      callback(key0);\n  }\n\n  // ### `_loopByKey0` executes the callback on all keys of a certain entry in index 0\n  _loopByKey0(index0, key0, callback) {\n    let index1, key1;\n    if (index1 = index0[key0]) {\n      for (key1 in index1)\n        callback(key1);\n    }\n  }\n\n  // ### `_loopByKey1` executes the callback on given keys of all entries in index 0\n  _loopByKey1(index0, key1, callback) {\n    let key0, index1;\n    for (key0 in index0) {\n      index1 = index0[key0];\n      if (index1[key1])\n        callback(key0);\n    }\n  }\n\n  // ### `_loopBy2Keys` executes the callback on given keys of certain entries in index 2\n  _loopBy2Keys(index0, key0, key1, callback) {\n    let index1, index2, key2;\n    if ((index1 = index0[key0]) && (index2 = index1[key1])) {\n      for (key2 in index2)\n        callback(key2);\n    }\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex(index0, key0, key1, key2) {\n    let count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      if (index1 = index0[value0]) {\n        // If a key is specified, count only that part of index 1\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the quad if it exists\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all quads\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs(graph) {\n    if (!isString(graph))\n      return this._graphs;\n    const graphs = {};\n    graphs[graph] = this._graphs[graph];\n    return graphs;\n  }\n\n  // ### `_uniqueEntities` returns a function that accepts an entity ID\n  // and passes the corresponding entity to callback if it hasn't occurred before.\n  _uniqueEntities(callback) {\n    const uniqueIds = Object.create(null);\n    return id => {\n      if (!(id in uniqueIds)) {\n        uniqueIds[id] = true;\n        callback(termFromId(this._entities[id], this._factory));\n      }\n    };\n  }\n\n  // ## Public methods\n\n  // ### `addQuad` adds a new quad to the store.\n  // Returns if the quad index has changed, if the quad did not already exist.\n  addQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find the graph that will contain the triple\n    let graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    const ids = this._ids;\n    const entities = this._entities;\n    subject   = ids[subject]   || (ids[entities[++this._id] = subject]   = this._id);\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id);\n    object    = ids[object]    || (ids[entities[++this._id] = object]    = this._id);\n\n    const changed = this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached quad count is now invalid\n    this._size = null;\n    return changed;\n  }\n\n  // ### `addQuads` adds multiple quads to the store\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `import` adds a stream of quads to the store\n  import(stream) {\n    stream.on('data', quad => { this.addQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeQuad` removes a quad from the store if it exists\n  removeQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    const ids = this._ids, graphs = this._graphs;\n    let graphItem, subjects, predicates;\n    if (!(subject    = ids[subject]) || !(predicate = ids[predicate]) ||\n        !(object     = ids[object])  || !(graphItem = graphs[graph])  ||\n        !(subjects   = graphItem.subjects[subject]) ||\n        !(predicates = subjects[predicate]) ||\n        !(object in predicates))\n      return false;\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) return true;\n    delete graphs[graph];\n    return true;\n  }\n\n  // ### `removeQuads` removes multiple quads from the store\n  removeQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.removeQuad(quads[i]);\n  }\n\n  // ### `remove` removes a stream of quads from the store\n  remove(stream) {\n    stream.on('data', quad => { this.removeQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeMatches` removes all matching quads from the store\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  removeMatches(subject, predicate, object, graph) {\n    return this.remove(this.match(subject, predicate, object, graph));\n  }\n\n  // ### `deleteGraph` removes all triples with the given graph from the store\n  deleteGraph(graph) {\n    return this.removeMatches(null, null, null, graph);\n  }\n\n  // ### `getQuads` returns an array of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const quads = [], graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return quads;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the object index will be the fastest\n            this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                              'object', 'subject', 'predicate', graphId, null, quads);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            this._findInIndex(content.subjects, subjectId, predicateId, null,\n                              'subject', 'predicate', 'object', graphId, null, quads);\n        }\n        else if (predicateId)\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          this._findInIndex(content.predicates, predicateId, objectId, null,\n                            'predicate', 'object', 'subject', graphId, null, quads);\n        else if (objectId)\n          // If only object is given, the object index will be the fastest\n          this._findInIndex(content.objects, objectId, null, null,\n                            'object', 'subject', 'predicate', graphId, null, quads);\n        else\n          // If nothing is given, iterate subjects and predicates first\n          this._findInIndex(content.subjects, null, null, null,\n                            'subject', 'predicate', 'object', graphId, null, quads);\n      }\n    }\n    return quads;\n  }\n\n  // ### `match` returns a stream of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  match(subject, predicate, object, graph) {\n    const stream = new Readable({ objectMode: true });\n\n    // Initialize stream once it is being read\n    stream._read = () => {\n      for (const quad of this.getQuads(subject, predicate, object, graph))\n        stream.push(quad);\n      stream.push(null);\n    };\n\n    return stream;\n  }\n\n  // ### `countQuads` returns the number of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  countQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let count = 0, content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return 0;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subject) {\n          if (object)\n            // If subject and object are given, the object index will be the fastest\n            count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            count += this._countInIndex(content.subjects, subjectId, predicateId, objectId);\n        }\n        else if (predicate) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          count += this._countInIndex(content.predicates, predicateId, objectId, subjectId);\n        }\n        else {\n          // If only object is possibly given, the object index will be the fastest\n          count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `forEach` executes the callback on all quads.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forEach(callback, subject, predicate, object, graph) {\n    this.some(quad => {\n      callback(quad);\n      return false;\n    }, subject, predicate, object, graph);\n  }\n\n  // ### `every` executes the callback on all quads,\n  // and returns `true` if it returns truthy for all them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  every(callback, subject, predicate, object, graph) {\n    let some = false;\n    const every = !this.some(quad => {\n      some = true;\n      return !callback(quad);\n    }, subject, predicate, object, graph);\n    return some && every;\n  }\n\n  // ### `some` executes the callback on all quads,\n  // and returns `true` if it returns truthy for any of them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  some(callback, subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return false;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId) {\n          // If subject and object are given, the object index will be the fastest\n            if (this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                                  'object', 'subject', 'predicate', graphId, callback, null))\n              return true;\n          }\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            if (this._findInIndex(content.subjects, subjectId, predicateId, null,\n                                  'subject', 'predicate', 'object', graphId, callback, null))\n              return true;\n        }\n        else if (predicateId) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          if (this._findInIndex(content.predicates, predicateId, objectId, null,\n                                'predicate', 'object', 'subject', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else if (objectId) {\n          // If only object is given, the object index will be the fastest\n          if (this._findInIndex(content.objects, objectId, null, null,\n                                'object', 'subject', 'predicate', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else\n        // If nothing is given, iterate subjects and predicates first\n        if (this._findInIndex(content.subjects, null, null, null,\n                              'subject', 'predicate', 'object', graphId, callback, null)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  // ### `getSubjects` returns all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getSubjects(predicate, object, graph) {\n    const results = [];\n    this.forSubjects(s => { results.push(s); }, predicate, object, graph);\n    return results;\n  }\n\n  // ### `forSubjects` executes the callback on all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forSubjects(callback, predicate, object, graph) {\n    // Convert terms to internal string representation\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, predicateId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (predicateId) {\n          if (objectId)\n            // If predicate and object are given, the POS index is best.\n            this._loopBy2Keys(content.predicates, predicateId, objectId, callback);\n          else\n            // If only predicate is given, the SPO index is best.\n            this._loopByKey1(content.subjects, predicateId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the OSP index is best.\n          this._loopByKey0(content.objects, objectId, callback);\n        else\n          // If no params given, iterate all the subjects\n          this._loop(content.subjects, callback);\n      }\n    }\n  }\n\n  // ### `getPredicates` returns all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getPredicates(subject, object, graph) {\n    const results = [];\n    this.forPredicates(p => { results.push(p); }, subject, object, graph);\n    return results;\n  }\n\n  // ### `forPredicates` executes the callback on all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forPredicates(callback, subject, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject) && !(subjectId = ids[subject]) ||\n        isString(object)  && !(objectId  = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the OSP index is best.\n            this._loopBy2Keys(content.objects, objectId, subjectId, callback);\n          else\n            // If only subject is given, the SPO index is best.\n            this._loopByKey0(content.subjects, subjectId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the POS index is best.\n          this._loopByKey1(content.predicates, objectId, callback);\n        else\n          // If no params given, iterate all the predicates.\n          this._loop(content.predicates, callback);\n      }\n    }\n  }\n\n  // ### `getObjects` returns all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getObjects(subject, predicate, graph) {\n    const results = [];\n    this.forObjects(o => { results.push(o); }, subject, predicate, graph);\n    return results;\n  }\n\n  // ### `forObjects` executes the callback on all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forObjects(callback, subject, predicate, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, predicateId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject]) ||\n        isString(predicate) && !(predicateId = ids[predicate]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (predicateId)\n            // If subject and predicate are given, the SPO index is best.\n            this._loopBy2Keys(content.subjects, subjectId, predicateId, callback);\n          else\n            // If only subject is given, the OSP index is best.\n            this._loopByKey1(content.objects, subjectId, callback);\n        }\n        else if (predicateId)\n          // If only predicate is given, the POS index is best.\n          this._loopByKey0(content.predicates, predicateId, callback);\n        else\n          // If no params given, iterate all the objects.\n          this._loop(content.objects, callback);\n      }\n    }\n  }\n\n  // ### `getGraphs` returns all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getGraphs(subject, predicate, object) {\n    const results = [];\n    this.forGraphs(g => { results.push(g); }, subject, predicate, object);\n    return results;\n  }\n\n  // ### `forGraphs` executes the callback on all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forGraphs(callback, subject, predicate, object) {\n    for (const graph in this._graphs) {\n      this.some(quad => {\n        callback(quad.graph);\n        return true; // Halt iteration of some()\n      }, subject, predicate, object, graph);\n    }\n  }\n\n  // ### `createBlankNode` creates a new blank node, returning its name\n  createBlankNode(suggestedName) {\n    let name, index;\n    // Generate a name based on the suggested name\n    if (suggestedName) {\n      name = suggestedName = `_:${suggestedName}`, index = 1;\n      while (this._ids[name])\n        name = suggestedName + index++;\n    }\n    // Generate a generic blank node name\n    else {\n      do { name = `_:b${this._blankNodeIndex++}`; }\n      while (this._ids[name]);\n    }\n    // Add the blank node to the entities, avoiding the generation of duplicates\n    this._ids[name] = ++this._id;\n    this._entities[this._id] = name;\n    return this._factory.blankNode(name.substr(2));\n  }\n\n  // ### `extractLists` finds and removes all list triples\n  // and returns the items per list.\n  extractLists({ remove = false, ignoreErrors = false } = {}) {\n    const lists = {}; // has scalar keys so could be a simple Object\n    const onError = ignoreErrors ? (() => true) :\n                  ((node, message) => { throw new Error(`${node.value} ${message}`); });\n\n    // Traverse each list from its tail\n    const tails = this.getQuads(null, namespaces.rdf.rest, namespaces.rdf.nil, null);\n    const toRemove = remove ? [...tails] : [];\n    tails.forEach(tailQuad => {\n      const items = [];             // the members found as objects of rdf:first quads\n      let malformed = false;      // signals whether the current list is malformed\n      let head;                   // the head of the list (_:b1 in above example)\n      let headPos;                // set to subject or object when head is set\n      const graph = tailQuad.graph; // make sure list is in exactly one graph\n\n      // Traverse the list from tail to end\n      let current = tailQuad.subject;\n      while (current && !malformed) {\n        const objectQuads = this.getQuads(null, null, current, null);\n        const subjectQuads = this.getQuads(current, null, null, null);\n        let quad, first = null, rest = null, parent = null;\n\n        // Find the first and rest of this list node\n        for (let i = 0; i < subjectQuads.length && !malformed; i++) {\n          quad = subjectQuads[i];\n          if (!quad.graph.equals(graph))\n            malformed = onError(current, 'not confined to single graph');\n          else if (head)\n            malformed = onError(current, 'has non-list arcs out');\n\n          // one rdf:first\n          else if (quad.predicate.value === namespaces.rdf.first) {\n            if (first)\n              malformed = onError(current, 'has multiple rdf:first arcs');\n            else\n              toRemove.push(first = quad);\n          }\n\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (rest)\n              malformed = onError(current, 'has multiple rdf:rest arcs');\n            else\n              toRemove.push(rest = quad);\n          }\n\n          // alien triple\n          else if (objectQuads.length)\n            malformed = onError(current, 'can\\'t be subject and object');\n          else {\n            head = quad; // e.g. { (1 2 3) :p :o }\n            headPos = 'subject';\n          }\n        }\n\n        // { :s :p (1 2) } arrives here with no head\n        // { (1 2) :p :o } arrives here with head set to the list.\n        for (let i = 0; i < objectQuads.length && !malformed; ++i) {\n          quad = objectQuads[i];\n          if (head)\n            malformed = onError(current, 'can\\'t have coreferences');\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (parent)\n              malformed = onError(current, 'has incoming rdf:rest arcs');\n            else\n              parent = quad;\n          }\n          else {\n            head = quad; // e.g. { :s :p (1 2) }\n            headPos = 'object';\n          }\n        }\n\n        // Store the list item and continue with parent\n        if (!first)\n          malformed = onError(current, 'has no list head');\n        else\n          items.unshift(first.object);\n        current = parent && parent.subject;\n      }\n\n      // Don't remove any quads if the list is malformed\n      if (malformed)\n        remove = false;\n      // Store the list under the value of its head\n      else if (head)\n        lists[head[headPos].value] = items;\n    });\n\n    // Remove list quads if requested\n    if (remove)\n      this.removeQuads(toRemove);\n    return lists;\n  }\n}\n\n// Determines whether the argument is a string\nfunction isString(s) {\n  return typeof s === 'string' || s instanceof String;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","// **N3Parser** parses N3 documents.\nimport N3Lexer from './N3Lexer';\nimport N3DataFactory from './N3DataFactory';\nimport namespaces from './IRIs';\n\nlet blankNodePrefix = 0;\n\n// ## Constructor\nexport default class N3Parser {\n  constructor(options) {\n    this._contextStack = [];\n    this._graph = null;\n\n    // Set the document IRI\n    options = options || {};\n    this._setBase(options.baseIRI);\n    options.factory && initDataFactory(this, options.factory);\n\n    // Set supported features depending on the format\n    const format = (typeof options.format === 'string') ?\n                 options.format.match(/\\w*$/)[0].toLowerCase() : '',\n        isTurtle = /turtle/.test(format), isTriG = /trig/.test(format),\n        isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n        isN3 = this._n3Mode = /n3/.test(format),\n        isLineMode = isNTriples || isNQuads;\n    if (!(this._supportsNamedGraphs = !(isTurtle || isN3)))\n      this._readPredicateOrNamedGraph = this._readPredicate;\n    // Support triples in other graphs\n    this._supportsQuads = !(isTurtle || isTriG || isNTriples || isN3);\n    // Support nesting of triples\n    this._supportsRDFStar = format === '' || /star|\\*$/.test(format);\n    // Disable relative IRIs in N-Triples or N-Quads mode\n    if (isLineMode)\n      this._resolveRelativeIRI = iri => { return null; };\n    this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n                              options.blankNodePrefix.replace(/^(?!_:)/, '_:');\n    this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode, n3: isN3 });\n    // Disable explicit quantifiers by default\n    this._explicitQuantifiers = !!options.explicitQuantifiers;\n  }\n\n  // ## Static class methods\n\n  // ### `_resetBlankNodePrefix` restarts blank node prefix identification\n  static _resetBlankNodePrefix() {\n    blankNodePrefix = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_setBase` sets the base IRI to resolve relative IRIs\n  _setBase(baseIRI) {\n    if (!baseIRI) {\n      this._base = '';\n      this._basePath = '';\n    }\n    else {\n      // Remove fragment if present\n      const fragmentPos = baseIRI.indexOf('#');\n      if (fragmentPos >= 0)\n        baseIRI = baseIRI.substr(0, fragmentPos);\n      // Set base IRI and its components\n      this._base = baseIRI;\n      this._basePath   = baseIRI.indexOf('/') < 0 ? baseIRI :\n                         baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(/^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i);\n      this._baseRoot   = baseIRI[0];\n      this._baseScheme = baseIRI[1];\n    }\n  }\n\n  // ### `_saveContext` stores the current parsing context\n  // when entering a new scope (list, blank node, formula)\n  _saveContext(type, graph, subject, predicate, object) {\n    const n3Mode = this._n3Mode;\n    this._contextStack.push({\n      subject: subject, predicate: predicate, object: object,\n      graph: graph, type: type,\n      inverse: n3Mode ? this._inversePredicate : false,\n      blankPrefix: n3Mode ? this._prefixes._ : '',\n      quantified: n3Mode ? this._quantified : null,\n    });\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      // Every new scope resets the predicate direction\n      this._inversePredicate = false;\n      // In N3, blank nodes are scoped to a formula\n      // (using a dot as separator, as a blank node label cannot start with it)\n      this._prefixes._ = (this._graph ? `${this._graph.id.substr(2)}.` : '.');\n      // Quantifiers are scoped to a formula\n      this._quantified = Object.create(this._quantified);\n    }\n  }\n\n  // ### `_restoreContext` restores the parent context\n  // when leaving a scope (list, blank node, formula)\n  _restoreContext() {\n    const context = this._contextStack.pop(), n3Mode = this._n3Mode;\n    this._subject   = context.subject;\n    this._predicate = context.predicate;\n    this._object    = context.object;\n    this._graph     = context.graph;\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      this._inversePredicate = context.inverse;\n      this._prefixes._ = context.blankPrefix;\n      this._quantified = context.quantified;\n    }\n  }\n\n  // ### `_readInTopContext` reads a token when in the top context\n  _readInTopContext(token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration\n    case 'PREFIX':\n      this._sparqlStyle = true;\n    case '@prefix':\n      return this._readPrefix;\n    // It could be a base declaration\n    case 'BASE':\n      this._sparqlStyle = true;\n    case '@base':\n      return this._readBaseIRI;\n    // It could be a graph\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs)\n        return this._readNamedGraphLabel;\n    // Otherwise, the next token must be a subject\n    default:\n      return this._readSubject(token);\n    }\n  }\n\n  // ### `_readEntity` reads an IRI, prefixed name, blank node, or variable\n  _readEntity(token, quantifier) {\n    let value;\n    switch (token.type) {\n    // Read a relative or absolute IRI\n    case 'IRI':\n    case 'typeIRI':\n      const iri = this._resolveIRI(token.value);\n      if (iri === null)\n        return this._error('Invalid IRI', token);\n      value = this._namedNode(iri);\n      break;\n    // Read a prefixed name\n    case 'type':\n    case 'prefixed':\n      const prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error(`Undefined prefix \"${token.prefix}:\"`, token);\n      value = this._namedNode(prefix + token.value);\n      break;\n    // Read a blank node\n    case 'blank':\n      value = this._blankNode(this._prefixes[token.prefix] + token.value);\n      break;\n    // Read a variable\n    case 'var':\n      value = this._variable(token.value.substr(1));\n      break;\n    // Everything else is not an entity\n    default:\n      return this._error(`Expected entity but got ${token.type}`, token);\n    }\n    // In N3 mode, replace the entity if it is quantified\n    if (!quantifier && this._n3Mode && (value.id in this._quantified))\n      value = this._quantified[value.id];\n    return value;\n  }\n\n  // ### `_readSubject` reads a quad's subject\n  _readSubject(token) {\n    this._predicate = null;\n    switch (token.type) {\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph,\n                        this._subject = this._blankNode(), null, null);\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this.RDF_NIL, null, null);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph,\n                        this._graph = this._blankNode(), null, null);\n      return this._readSubject;\n    case '}':\n       // No subject; the graph in which we are reading is closed instead\n      return this._readPunctuation(token);\n    case '@forSome':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forSome\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORSOME;\n      this._quantifier = this._blankNode;\n      return this._readQuantifierList;\n    case '@forAll':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forAll\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORALL;\n      this._quantifier = this._variable;\n      return this._readQuantifierList;\n    case 'literal':\n      if (!this._n3Mode)\n        return this._error('Unexpected literal', token);\n\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._completeSubjectLiteral;\n      }\n      else\n        this._subject = this._literal(token.value, this._namedNode(token.prefix));\n\n      break;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, null, null, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the subject entity\n      if ((this._subject = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the subject might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._readPredicateOrNamedGraph);\n    }\n\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // ### `_readPredicate` reads a quad's predicate\n  _readPredicate(token) {\n    const type = token.type;\n    switch (type) {\n    case 'inverse':\n      this._inversePredicate = true;\n    case 'abbreviation':\n      this._predicate = this.ABBREVIATIONS[token.value];\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon\n      if (this._predicate === null)\n        return this._error(`Unexpected ${type}`, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Additional semicolons can be safely ignored\n      return this._predicate !== null ? this._readPredicate :\n             this._error('Expected predicate but got ;', token);\n    case 'blank':\n      if (!this._n3Mode)\n        return this._error('Disallowed blank node as predicate', token);\n    default:\n      if ((this._predicate = this._readEntity(token)) === undefined)\n        return;\n    }\n    // The next token must be an object\n    return this._readObject;\n  }\n\n  // ### `_readObject` reads a quad's object\n  _readObject(token) {\n    switch (token.type) {\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._readDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else\n        this._object = this._literal(token.value, this._namedNode(token.prefix));\n      break;\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph, this._subject, this._predicate,\n                        this._subject = this._blankNode());\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this._subject, this._predicate, this.RDF_NIL);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, this._subject, this._predicate, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the object entity\n      if ((this._object = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the object might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._getContextEndReader());\n    }\n    return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateOrNamedGraph` reads a quad's predicate, or a named graph\n  _readPredicateOrNamedGraph(token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  }\n\n  // ### `_readGraph` reads a graph\n  _readGraph(token) {\n    if (token.type !== '{')\n      return this._error(`Expected graph but got ${token.type}`, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  }\n\n  // ### `_readBlankNodeHead` reads the head of a blank node\n  _readBlankNodeHead(token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    else {\n      this._predicate = null;\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readBlankNodeTail` reads the end of a blank node\n  _readBlankNodeTail(token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node quad\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this blank node\n    const empty = this._predicate === null;\n    this._restoreContext();\n    // If the blank node was the subject, continue reading the predicate\n    if (this._object === null)\n      // If the blank node was empty, it could be a named graph label\n      return empty ? this._readPredicateOrNamedGraph : this._readPredicateAfterBlank;\n    // If the blank node was the object, restore previous context and read punctuation\n    else\n      return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateAfterBlank` reads a predicate after an anonymous blank node\n  _readPredicateAfterBlank(token) {\n    switch (token.type) {\n    case '.':\n    case '}':\n      // No predicate is coming if the triple is terminated here\n      this._subject = null;\n      return this._readPunctuation(token);\n    default:\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readListItem` reads items from a list\n  _readListItem(token) {\n    let item = null,                      // The item of the list\n        list = null,                      // The list itself\n        next = this._readListItem;        // The next function to execute\n    const previousList = this._subject,   // The previous list that contains this list\n        stack = this._contextStack,       // The stack of parent contexts\n        parent = stack[stack.length - 1]; // The parent containing the current list\n\n    switch (token.type) {\n    case '[':\n      // Stack the current list quad and start a new quad with a blank node as subject\n      this._saveContext('blank', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST,\n                        this._subject = item = this._blankNode());\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list quad and start a new list\n      this._saveContext('list', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST, this.RDF_NIL);\n      this._subject = null;\n      break;\n    case ')':\n      // Closing the list; restore the parent context\n      this._restoreContext();\n      // If this list is contained within a parent list, return the membership quad here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._emit(this._subject, this._predicate, this._object, this._graph);\n      // Was this list the parent's subject?\n      if (this._predicate === null) {\n        // The next token is the predicate\n        next = this._readPredicate;\n        // No list tail if this was an empty list\n        if (this._subject === this.RDF_NIL)\n          return next;\n      }\n      // The list was in the parent context's object\n      else {\n        next = this._getContextEndReader();\n        // No list tail if this was an empty list\n        if (this._object === this.RDF_NIL)\n          return next;\n      }\n      // Close the list by making the head nil\n      list = this.RDF_NIL;\n      break;\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        next = this._readListItemDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else {\n        item = this._literal(token.value, this._namedNode(token.prefix));\n        next = this._getContextEndReader();\n      }\n      break;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    default:\n      if ((item = this._readEntity(token)) === undefined)\n        return;\n    }\n\n     // Create a new blank node if no item head was assigned yet\n    if (list === null)\n      this._subject = list = this._blankNode();\n\n    // Is this the first element of the list?\n    if (previousList === null) {\n      // This list is either the subject or the object of its parent\n      if (parent.predicate === null)\n        parent.subject = list;\n      else\n        parent.object = list;\n    }\n    else {\n      // Continue the previous list with the current list\n      this._emit(previousList, this.RDF_REST, list, this._graph);\n    }\n    // If an item was read, add it to the list\n    if (item !== null) {\n      // In N3 mode, the item might be a path\n      if (this._n3Mode && (token.type === 'IRI' || token.type === 'prefixed')) {\n        // Create a new context to add the item's path\n        this._saveContext('item', this._graph, list, this.RDF_FIRST, item);\n        this._subject = item, this._predicate = null;\n        // _readPath will restore the context and output the item\n        return this._getPathReader(this._readListItem);\n      }\n      // Output the item\n      this._emit(list, this.RDF_FIRST, item, this._graph);\n    }\n    return next;\n  }\n\n  // ### `_readDataTypeOrLang` reads an _optional_ datatype or language\n  _readDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, false);\n  }\n\n\n  // ### `_readListItemDataTypeOrLang` reads an _optional_ datatype or language in a list\n  _readListItemDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, true);\n  }\n\n  // ### `_completeLiteral` completes a literal with an optional datatype or language\n  _completeLiteral(token) {\n    // Create a simple string literal by default\n    let literal = this._literal(this._literalValue);\n\n    switch (token.type) {\n    // Create a datatyped literal\n    case 'type':\n    case 'typeIRI':\n      const datatype = this._readEntity(token);\n      if (datatype === undefined) return; // No datatype means an error occurred\n      literal = this._literal(this._literalValue, datatype);\n      token = null;\n      break;\n    // Create a language-tagged string\n    case 'langcode':\n      literal = this._literal(this._literalValue, token.value);\n      token = null;\n      break;\n    }\n\n    return { token, literal };\n  }\n\n  // Completes a literal in subject position\n  _completeSubjectLiteral(token) {\n    this._subject = this._completeLiteral(token).literal;\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // Completes a literal in object position\n  _completeObjectLiteral(token, listItem) {\n    const completed = this._completeLiteral(token);\n    if (!completed)\n      return;\n    this._object = completed.literal;\n\n    // If this literal was part of a list, write the item\n    // (we could also check the context stack, but passing in a flag is faster)\n    if (listItem)\n      this._emit(this._subject, this.RDF_FIRST, this._object, this._graph);\n    // If the token was consumed, continue with the rest of the input\n    if (completed.token === null)\n      return this._getContextEndReader();\n    // Otherwise, consume the token now\n    else {\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(completed.token);\n    }\n  }\n\n  // ### `_readFormulaTail` reads the end of a formula\n  _readFormulaTail(token) {\n    if (token.type !== '}')\n      return this._readPunctuation(token);\n\n    // Store the last quad of the formula\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this formula\n    this._restoreContext();\n    // If the formula was the subject, continue reading the predicate.\n    // If the formula was the object, read punctuation.\n    return this._object === null ? this._readPredicate : this._getContextEndReader();\n  }\n\n  // ### `_readPunctuation` reads punctuation between quads or quad parts\n  _readPunctuation(token) {\n    let next, graph = this._graph;\n    const subject = this._subject, inversePredicate = this._inversePredicate;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      if (this._n3Mode)\n        return this._readFormulaTail(token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next\n    case '.':\n      this._subject = null;\n      next = this._contextStack.length ? this._readSubject : this._readInTopContext;\n      if (inversePredicate) this._inversePredicate = false;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (graph = this._readEntity(token)) !== undefined) {\n        next = this._readQuadPunctuation;\n        break;\n      }\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    if (subject !== null) {\n      const predicate = this._predicate, object = this._object;\n      if (!inversePredicate)\n        this._emit(subject, predicate, object,  graph);\n      else\n        this._emit(object,  predicate, subject, graph);\n    }\n    return next;\n  }\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation(token) {\n    let next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    this._emit(this._subject, this._predicate, this._object, this._graph);\n    return next;\n  }\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad\n  _readQuadPunctuation(token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  }\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration\n  _readPrefix(token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  }\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration\n  _readPrefixIRI(token) {\n    if (token.type !== 'IRI')\n      return this._error(`Expected IRI to follow prefix \"${this._prefix}:\"`, token);\n    const prefixNode = this._readEntity(token);\n    this._prefixes[this._prefix] = prefixNode.value;\n    this._prefixCallback(this._prefix, prefixNode);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration\n  _readBaseIRI(token) {\n    const iri = token.type === 'IRI' && this._resolveIRI(token.value);\n    if (!iri)\n      return this._error('Expected valid IRI to follow base declaration', token);\n    this._setBase(iri);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph\n  _readNamedGraphLabel(token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'blank':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  }\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph\n  _readNamedGraphBlankLabel(token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = this._blankNode();\n    return this._readGraph;\n  }\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration\n  _readDeclarationPunctuation(token) {\n    // SPARQL-style declarations don't have punctuation\n    if (this._sparqlStyle) {\n      this._sparqlStyle = false;\n      return this._readInTopContext(token);\n    }\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  }\n\n  // Reads a list of quantified symbols from a @forSome or @forAll statement\n  _readQuantifierList(token) {\n    let entity;\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      if ((entity = this._readEntity(token, true)) !== undefined)\n        break;\n    default:\n      return this._error(`Unexpected ${token.type}`, token);\n    }\n    // Without explicit quantifiers, map entities to a quantified entity\n    if (!this._explicitQuantifiers)\n      this._quantified[entity.id] = this._quantifier(this._blankNode().value);\n    // With explicit quantifiers, output the reified quantifier\n    else {\n      // If this is the first item, start a new quantifier list\n      if (this._subject === null)\n        this._emit(this._graph || this.DEFAULTGRAPH, this._predicate,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Otherwise, continue the previous list\n      else\n        this._emit(this._subject, this.RDF_REST,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Output the list item\n      this._emit(this._subject, this.RDF_FIRST, entity, this.QUANTIFIERS_GRAPH);\n    }\n    return this._readQuantifierPunctuation;\n  }\n\n  // Reads punctuation from a @forSome or @forAll statement\n  _readQuantifierPunctuation(token) {\n    // Read more quantifiers\n    if (token.type === ',')\n      return this._readQuantifierList;\n    // End of the quantifier list\n    else {\n      // With explicit quantifiers, close the quantifier list\n      if (this._explicitQuantifiers) {\n        this._emit(this._subject, this.RDF_REST, this.RDF_NIL, this.QUANTIFIERS_GRAPH);\n        this._subject = null;\n      }\n      // Read a dot\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(token);\n    }\n  }\n\n  // ### `_getPathReader` reads a potential path and then resumes with the given function\n  _getPathReader(afterPath) {\n    this._afterPath = afterPath;\n    return this._readPath;\n  }\n\n  // ### `_readPath` reads a potential path\n  _readPath(token) {\n    switch (token.type) {\n    // Forward path\n    case '!': return this._readForwardPath;\n    // Backward path\n    case '^': return this._readBackwardPath;\n    // Not a path; resume reading where we left off\n    default:\n      const stack = this._contextStack, parent = stack.length && stack[stack.length - 1];\n      // If we were reading a list item, we still need to output it\n      if (parent && parent.type === 'item') {\n        // The list item is the remaining subejct after reading the path\n        const item = this._subject;\n        // Switch back to the context of the list\n        this._restoreContext();\n        // Output the list item\n        this._emit(this._subject, this.RDF_FIRST, item, this._graph);\n      }\n      return this._afterPath(token);\n    }\n  }\n\n  // ### `_readForwardPath` reads a '!' path\n  _readForwardPath(token) {\n    let subject, predicate;\n    const object = this._blankNode();\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's object\n    if (this._predicate === null)\n      subject = this._subject, this._subject = object;\n    // If we were reading an object, replace the subject by the path's object\n    else\n      subject = this._object,  this._object  = object;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readBackwardPath` reads a '^' path\n  _readBackwardPath(token) {\n    const subject = this._blankNode();\n    let predicate, object;\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's subject\n    if (this._predicate === null)\n      object = this._subject, this._subject = subject;\n    // If we were reading an object, replace the subject by the path's subject\n    else\n      object = this._object,  this._object  = subject;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readRDFStarTailOrGraph` reads the graph of a nested RDF* quad or the end of a nested RDF* triple\n  _readRDFStarTailOrGraph(token) {\n    if (token.type !== '>>') {\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (this._graph = this._readEntity(token)) !== undefined)\n        return this._readRDFStarTail;\n      return this._error(`Expected >> to follow \"${this._object.id}\"`, token);\n    }\n    return this._readRDFStarTail(token);\n  }\n\n  // ### `_readRDFStarTail` reads the end of a nested RDF* triple\n  _readRDFStarTail(token) {\n    if (token.type !== '>>')\n      return this._error(`Expected >> but got ${token.type}`, token);\n    // Read the quad and restore the previous context\n    const quad = this._quad(this._subject, this._predicate, this._object,\n      this._graph || this.DEFAULTGRAPH);\n    this._restoreContext();\n    // If the triple was the subject, continue by reading the predicate.\n    if (this._subject === null) {\n      this._subject = quad;\n      return this._readPredicate;\n    }\n    // If the triple was the object, read context end.\n    else {\n      this._object = quad;\n      return this._getContextEndReader();\n    }\n  }\n\n  // ### `_getContextEndReader` gets the next reader function at the end of a context\n  _getContextEndReader() {\n    const contextStack = this._contextStack;\n    if (!contextStack.length)\n      return this._readPunctuation;\n\n    switch (contextStack[contextStack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    case 'formula':\n      return this._readFormulaTail;\n    case '<<':\n      return this._readRDFStarTailOrGraph;\n    }\n  }\n\n  // ### `_emit` sends a quad through the callback\n  _emit(subject, predicate, object, graph) {\n    this._callback(null, this._quad(subject, predicate, object, graph || this.DEFAULTGRAPH));\n  }\n\n  // ### `_error` emits an error message through the callback\n  _error(message, token) {\n    const err = new Error(`${message} on line ${token.line}.`);\n    err.context = {\n      token: token,\n      line: token.line,\n      previousToken: this._lexer.previousToken,\n    };\n    this._callback(err);\n    this._callback = noop;\n  }\n\n  // ### `_resolveIRI` resolves an IRI against the base path\n  _resolveIRI(iri) {\n    return /^[a-z][a-z0-9+.-]*:/i.test(iri) ? iri : this._resolveRelativeIRI(iri);\n  }\n\n  // ### `_resolveRelativeIRI` resolves an IRI against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative\n  _resolveRelativeIRI(iri) {\n    // An empty relative IRI indicates the base IRI\n    if (!iri.length)\n      return this._base;\n    // Decide resolving strategy based in the first character\n    switch (iri[0]) {\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return this._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      // Relative IRIs cannot contain a colon in the first path segment\n      return (/^[^/:]*:/.test(iri)) ? null : this._removeDotSegments(this._basePath + iri);\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986\n  _removeDotSegments(iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!/(^|\\/)\\.\\.?($|[/#?])/.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    const length = iri.length;\n    let result = '', i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return `${result}/${iri.substr(i + 1)}`;\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed quad through the callback\n  parse(input, quadCallback, prefixCallback) {\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._sparqlStyle = false;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = this._blankNodePrefix ? this._blankNodePrefix.substr(2)\n                                             : `b${blankNodePrefix++}_`;\n    this._prefixCallback = prefixCallback || noop;\n    this._inversePredicate = false;\n    this._quantified = Object.create(null);\n\n    // Parse synchronously if no quad callback is given\n    if (!quadCallback) {\n      const quads = [];\n      let error;\n      this._callback = (e, t) => { e ? (error = e) : t && quads.push(t); };\n      this._lexer.tokenize(input).every(token => {\n        return this._readCallback = this._readCallback(token);\n      });\n      if (error) throw error;\n      return quads;\n    }\n\n    // Parse asynchronously otherwise, executing the read callback when a token arrives\n    this._callback = quadCallback;\n    this._lexer.tokenize(input, (error, token) => {\n      if (error !== null)\n        this._callback(error), this._callback = noop;\n      else if (this._readCallback)\n        this._readCallback = this._readCallback(token);\n    });\n  }\n}\n\n// The empty function\nfunction noop() {}\n\n// Initializes the parser with the given data factory\nfunction initDataFactory(parser, factory) {\n  // Set factory methods\n  const namedNode = factory.namedNode;\n  parser._namedNode   = namedNode;\n  parser._blankNode   = factory.blankNode;\n  parser._literal     = factory.literal;\n  parser._variable    = factory.variable;\n  parser._quad        = factory.quad;\n  parser.DEFAULTGRAPH = factory.defaultGraph();\n\n  // Set common named nodes\n  parser.RDF_FIRST  = namedNode(namespaces.rdf.first);\n  parser.RDF_REST   = namedNode(namespaces.rdf.rest);\n  parser.RDF_NIL    = namedNode(namespaces.rdf.nil);\n  parser.N3_FORALL  = namedNode(namespaces.r.forAll);\n  parser.N3_FORSOME = namedNode(namespaces.r.forSome);\n  parser.ABBREVIATIONS = {\n    'a': namedNode(namespaces.rdf.type),\n    '=': namedNode(namespaces.owl.sameAs),\n    '>': namedNode(namespaces.log.implies),\n  };\n  parser.QUANTIFIERS_GRAPH = namedNode('urn:n3:quantifiers');\n}\ninitDataFactory(N3Parser.prototype, N3DataFactory);\n","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(globalThis)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","// N3.js implementations of the RDF/JS core data types\n// See https://github.com/rdfjs/representation-task-force/blob/master/interface-spec.md\n\nimport namespaces from './IRIs';\nimport { isDefaultGraph } from './N3Util';\nconst { rdf, xsd } = namespaces;\n\n// eslint-disable-next-line prefer-const\nlet DEFAULTGRAPH;\nlet _blankNodeCounter = 0;\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/;\nconst quadId = /^<<(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) ?(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+)?>>$/;\n\n// ## DataFactory singleton\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  variable,\n  literal,\n  defaultGraph,\n  quad,\n  triple: quad,\n};\nexport default DataFactory;\n\n// ## Term constructor\nexport class Term {\n  constructor(id) {\n    this.id = id;\n  }\n\n  // ### The value of this term\n  get value() {\n    return this.id;\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Term)\n      return this.id === other.id;\n    // Otherwise, compare term type and value\n    return !!other && this.termType === other.termType &&\n                      this.value    === other.value;\n  }\n\n  // ### Returns a plain object representation of this term\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n    };\n  }\n}\n\n\n// ## NamedNode constructor\nexport class NamedNode extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'NamedNode';\n  }\n}\n\n// ## Literal constructor\nexport class Literal extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'Literal';\n  }\n\n  // ### The text value of this literal\n  get value() {\n    return this.id.substring(1, this.id.lastIndexOf('\"'));\n  }\n\n  // ### The language of this literal\n  get language() {\n    // Find the last quotation mark (e.g., '\"abc\"@en-us')\n    const id = this.id;\n    let atPos = id.lastIndexOf('\"') + 1;\n    // If \"@\" it follows, return the remaining substring; empty otherwise\n    return atPos < id.length && id[atPos++] === '@' ? id.substr(atPos).toLowerCase() : '';\n  }\n\n  // ### The datatype IRI of this literal\n  get datatype() {\n    return new NamedNode(this.datatypeString);\n  }\n\n  // ### The datatype string of this literal\n  get datatypeString() {\n    // Find the last quotation mark (e.g., '\"abc\"^^http://ex.org/types#t')\n    const id = this.id, dtPos = id.lastIndexOf('\"') + 1;\n    const char = dtPos < id.length ? id[dtPos] : '';\n    // If \"^\" it follows, return the remaining substring\n    return char === '^' ? id.substr(dtPos + 2) :\n           // If \"@\" follows, return rdf:langString; xsd:string otherwise\n           (char !== '@' ? xsd.string : rdf.langString);\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both literals were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Literal)\n      return this.id === other.id;\n    // Otherwise, compare term type, value, language, and datatype\n    return !!other && !!other.datatype &&\n                      this.termType === other.termType &&\n                      this.value    === other.value    &&\n                      this.language === other.language &&\n                      this.datatype.value === other.datatype.value;\n  }\n\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n      language: this.language,\n      datatype: { termType: 'NamedNode', value: this.datatypeString },\n    };\n  }\n}\n\n// ## BlankNode constructor\nexport class BlankNode extends Term {\n  constructor(name) {\n    super(`_:${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'BlankNode';\n  }\n\n  // ### The name of this blank node\n  get value() {\n    return this.id.substr(2);\n  }\n}\n\nexport class Variable extends Term {\n  constructor(name) {\n    super(`?${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Variable';\n  }\n\n  // ### The name of this variable\n  get value() {\n    return this.id.substr(1);\n  }\n}\n\n// ## DefaultGraph constructor\nexport class DefaultGraph extends Term {\n  constructor() {\n    super('');\n    return DEFAULTGRAPH || this;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'DefaultGraph';\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through strict equality;\n    // otherwise, compare term types.\n    return (this === other) || (!!other && (this.termType === other.termType));\n  }\n}\n\n// ## DefaultGraph singleton\nDEFAULTGRAPH = new DefaultGraph();\n\n\n// ### Constructs a term from the given internal string ID\nexport function termFromId(id, factory) {\n  factory = factory || DataFactory;\n\n  // Falsy value or empty string indicate the default graph\n  if (!id)\n    return factory.defaultGraph();\n\n  // Identify the term type based on the first character\n  switch (id[0]) {\n  case '?':\n    return factory.variable(id.substr(1));\n  case '_':\n    return factory.blankNode(id.substr(2));\n  case '\"':\n    // Shortcut for internal literals\n    if (factory === DataFactory)\n      return new Literal(id);\n    // Literal without datatype or language\n    if (id[id.length - 1] === '\"')\n      return factory.literal(id.substr(1, id.length - 2));\n    // Literal with datatype or language\n    const endPos = id.lastIndexOf('\"', id.length - 1);\n    return factory.literal(id.substr(1, endPos - 1),\n            id[endPos + 1] === '@' ? id.substr(endPos + 2)\n                                   : factory.namedNode(id.substr(endPos + 3)));\n  case '<':\n    const components = quadId.exec(id);\n    return factory.quad(\n      termFromId(unescapeQuotes(components[1]), factory),\n      termFromId(unescapeQuotes(components[2]), factory),\n      termFromId(unescapeQuotes(components[3]), factory),\n      components[4] && termFromId(unescapeQuotes(components[4]), factory)\n    );\n  default:\n    return factory.namedNode(id);\n  }\n}\n\n// ### Constructs an internal string ID from the given term or ID string\nexport function termToId(term) {\n  if (typeof term === 'string')\n    return term;\n  if (term instanceof Term && term.termType !== 'Quad')\n    return term.id;\n  if (!term)\n    return DEFAULTGRAPH.id;\n\n  // Term instantiated with another library\n  switch (term.termType) {\n  case 'NamedNode':    return term.value;\n  case 'BlankNode':    return `_:${term.value}`;\n  case 'Variable':     return `?${term.value}`;\n  case 'DefaultGraph': return '';\n  case 'Literal':      return `\"${term.value}\"${\n    term.language ? `@${term.language}` :\n      (term.datatype && term.datatype.value !== xsd.string ? `^^${term.datatype.value}` : '')}`;\n  case 'Quad':\n    // To identify RDF* quad components, we escape quotes by doubling them.\n    // This avoids the overhead of backslash parsing of Turtle-like syntaxes.\n    return `<<${\n        escapeQuotes(termToId(term.subject))\n      } ${\n        escapeQuotes(termToId(term.predicate))\n      } ${\n        escapeQuotes(termToId(term.object))\n      }${\n        (isDefaultGraph(term.graph)) ? '' : ` ${termToId(term.graph)}`\n      }>>`;\n  default: throw new Error(`Unexpected termType: ${term.termType}`);\n  }\n}\n\n\n// ## Quad constructor\nexport class Quad extends Term {\n  constructor(subject, predicate, object, graph) {\n    super('');\n    this.subject   = subject;\n    this.predicate = predicate;\n    this.object    = object;\n    this.graph     = graph || DEFAULTGRAPH;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Quad';\n  }\n\n  // ### Returns a plain object representation of this quad\n  toJSON() {\n    return {\n      termType:  this.termType,\n      subject:   this.subject.toJSON(),\n      predicate: this.predicate.toJSON(),\n      object:    this.object.toJSON(),\n      graph:     this.graph.toJSON(),\n    };\n  }\n\n  // ### Returns whether this object represents the same quad as the other\n  equals(other) {\n    return !!other && this.subject.equals(other.subject)     &&\n                      this.predicate.equals(other.predicate) &&\n                      this.object.equals(other.object)       &&\n                      this.graph.equals(other.graph);\n  }\n}\nexport { Quad as Triple };\n\n// ### Escapes the quotes within the given literal\nexport function escapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`);\n}\n\n// ### Unescapes the quotes within the given literal\nexport function unescapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"\"/g, '\"')}`);\n}\n\n// ### Creates an IRI\nfunction namedNode(iri) {\n  return new NamedNode(iri);\n}\n\n// ### Creates a blank node\nfunction blankNode(name) {\n  return new BlankNode(name || `n3-${_blankNodeCounter++}`);\n}\n\n// ### Creates a literal\nfunction literal(value, languageOrDataType) {\n  // Create a language-tagged string\n  if (typeof languageOrDataType === 'string')\n    return new Literal(`\"${value}\"@${languageOrDataType.toLowerCase()}`);\n\n  // Automatically determine datatype for booleans and numbers\n  let datatype = languageOrDataType ? languageOrDataType.value : '';\n  if (datatype === '') {\n    // Convert a boolean\n    if (typeof value === 'boolean')\n      datatype = xsd.boolean;\n    // Convert an integer or double\n    else if (typeof value === 'number') {\n      if (Number.isFinite(value))\n        datatype = Number.isInteger(value) ? xsd.integer : xsd.double;\n      else {\n        datatype = xsd.double;\n        if (!Number.isNaN(value))\n          value = value > 0 ? 'INF' : '-INF';\n      }\n    }\n  }\n\n  // Create a datatyped literal\n  return (datatype === '' || datatype === xsd.string) ?\n    new Literal(`\"${value}\"`) :\n    new Literal(`\"${value}\"^^${datatype}`);\n}\n\n// ### Creates a variable\nfunction variable(name) {\n  return new Variable(name);\n}\n\n// ### Returns the default graph\nfunction defaultGraph() {\n  return DEFAULTGRAPH;\n}\n\n// ### Creates a quad\nfunction quad(subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph);\n}\n","// **N3Writer** writes N3 documents.\nimport namespaces from './IRIs';\nimport { default as N3DataFactory, Term } from './N3DataFactory';\nimport { isDefaultGraph } from './N3Util';\n\nconst DEFAULTGRAPH = N3DataFactory.defaultGraph();\n\nconst { rdf, xsd } = namespaces;\n\n// Characters in literals that require escaping\nconst escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapedCharacters = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n// ## Placeholder class to represent already pretty-printed terms\nclass SerializedTerm extends Term {\n  // Pretty-printed nodes are not equal to any other node\n  // (e.g., [] does not equal [])\n  equals() {\n    return false;\n  }\n}\n\n// ## Constructor\nexport default class N3Writer {\n  constructor(outputStream, options) {\n    // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n    this._prefixRegex = /$0^/;\n\n    // Shift arguments if the first argument is not a stream\n    if (outputStream && typeof outputStream.write !== 'function')\n      options = outputStream, outputStream = null;\n    options = options || {};\n    this._lists = options.lists;\n\n    // If no output stream given, send the output as string through the end callback\n    if (!outputStream) {\n      let output = '';\n      this._outputStream = {\n        write(chunk, encoding, done) { output += chunk; done && done(); },\n        end: done => { done && done(null, output); },\n      };\n      this._endStream = true;\n    }\n    else {\n      this._outputStream = outputStream;\n      this._endStream = options.end === undefined ? true : !!options.end;\n    }\n\n    // Initialize writer, depending on the format\n    this._subject = null;\n    if (!(/triple|quad/i).test(options.format)) {\n      this._graph = DEFAULTGRAPH;\n      this._prefixIRIs = Object.create(null);\n      options.prefixes && this.addPrefixes(options.prefixes);\n    }\n    else {\n      this._writeQuad = this._writeQuadLine;\n    }\n  }\n\n  // ## Private methods\n\n  // ### Whether the current graph is the default graph\n  get _inDefaultGraph() {\n    return DEFAULTGRAPH.equals(this._graph);\n  }\n\n  // ### `_write` writes the argument to the output stream\n  _write(string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  }\n\n  // ### `_writeQuad` writes the quad to the output stream\n  _writeQuad(subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (!graph.equals(this._graph)) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._inDefaultGraph ? '.\\n' : '\\n}\\n')) +\n                    (DEFAULTGRAPH.equals(graph) ? '' : `${this._encodeIriOrBlank(graph)} {\\n`));\n        this._graph = graph;\n        this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (subject.equals(this._subject)) {\n        // Don't repeat the predicate if it's the same\n        if (predicate.equals(this._predicate))\n          this._write(`, ${this._encodeObject(object)}`, done);\n        // Same subject, different predicate\n        else\n          this._write(`;\\n    ${\n                      this._encodePredicate(this._predicate = predicate)} ${\n                      this._encodeObject(object)}`, done);\n      }\n      // Different subject; write the whole quad\n      else\n        this._write(`${(this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject)} ${\n                    this._encodePredicate(this._predicate = predicate)} ${\n                    this._encodeObject(object)}`, done);\n    }\n    catch (error) { done && done(error); }\n  }\n\n  // ### `_writeQuadLine` writes the quad to the output stream as a single line\n  _writeQuadLine(subject, predicate, object, graph, done) {\n    // Write the quad without prefixes\n    delete this._prefixMatch;\n    this._write(this.quadToString(subject, predicate, object, graph), done);\n  }\n\n  // ### `quadToString` serializes a quad as a string\n  quadToString(subject, predicate, object, graph) {\n    return  `${this._encodeSubject(subject)} ${\n            this._encodeIriOrBlank(predicate)} ${\n            this._encodeObject(object)\n            }${graph && graph.value ? ` ${this._encodeIriOrBlank(graph)} .\\n` : ' .\\n'}`;\n  }\n\n  // ### `quadsToString` serializes an array of quads as a string\n  quadsToString(quads) {\n    return quads.map(t => {\n      return this.quadToString(t.subject, t.predicate, t.object, t.graph);\n    }).join('');\n  }\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject(entity) {\n    return entity.termType === 'Quad' ?\n      this._encodeQuad(entity) : this._encodeIriOrBlank(entity);\n  }\n\n  // ### `_encodeIriOrBlank` represents an IRI or blank node\n  _encodeIriOrBlank(entity) {\n    // A blank node or list is represented as-is\n    if (entity.termType !== 'NamedNode') {\n      // If it is a list head, pretty-print it\n      if (this._lists && (entity.value in this._lists))\n        entity = this.list(this._lists[entity.value]);\n      return 'id' in entity ? entity.id : `_:${entity.value}`;\n    }\n    // Escape special characters\n    let iri = entity.value;\n    if (escape.test(iri))\n      iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    const prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? `<${iri}>` :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  }\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral(literal) {\n    // Escape special characters\n    let value = literal.value;\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n    // Write the literal, possibly with type or language\n    if (literal.language)\n      return `\"${value}\"@${literal.language}`;\n    else if (literal.datatype.value !== xsd.string)\n      return `\"${value}\"^^${this._encodeIriOrBlank(literal.datatype)}`;\n    else\n      return `\"${value}\"`;\n  }\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate(predicate) {\n    return predicate.value === rdf.type ? 'a' : this._encodeIriOrBlank(predicate);\n  }\n\n  // ### `_encodeObject` represents an object\n  _encodeObject(object) {\n    switch (object.termType) {\n    case 'Quad':\n      return this._encodeQuad(object);\n    case 'Literal':\n      return this._encodeLiteral(object);\n    default:\n      return this._encodeIriOrBlank(object);\n    }\n  }\n\n  // ### `_encodeQuad` encodes an RDF* quad\n  _encodeQuad({ subject, predicate, object, graph }) {\n    return `<<${\n      this._encodeSubject(subject)} ${\n      this._encodePredicate(predicate)} ${\n      this._encodeObject(object)}${\n      isDefaultGraph(graph) ? '' : ` ${this._encodeIriOrBlank(graph)}`}>>`;\n  }\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite() {\n    throw new Error('Cannot write because the writer has been closed.');\n  }\n\n  // ### `addQuad` adds the quad to the output stream\n  addQuad(subject, predicate, object, graph, done) {\n    // The quad was given as an object, so shift parameters\n    if (object === undefined)\n      this._writeQuad(subject.subject, subject.predicate, subject.object, subject.graph, predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph === 'function')\n      this._writeQuad(subject, predicate, object, DEFAULTGRAPH, graph);\n    // The `graph` parameter was provided\n    else\n      this._writeQuad(subject, predicate, object, graph || DEFAULTGRAPH, done);\n  }\n\n  // ### `addQuads` adds the quads to the output stream\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix(prefix, iri, done) {\n    const prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  }\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes(prefixes, done) {\n    // Ignore prefixes if not supported by the serialization\n    if (!this._prefixIRIs)\n      return done && done();\n\n    // Write all new prefixes\n    let hasPrefixes = false;\n    for (let prefix in prefixes) {\n      let iri = prefixes[prefix];\n      if (typeof iri !== 'string')\n        iri = iri.value;\n      hasPrefixes = true;\n      // Finish a possible pending quad\n      if (this._subject !== null) {\n        this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n        this._subject = null, this._graph = '';\n      }\n      // Store and write the prefix\n      this._prefixIRIs[iri] = (prefix += ':');\n      this._write(`@prefix ${prefix} <${iri}>.\\n`);\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      let IRIlist = '', prefixList = '';\n      for (const prefixIRI in this._prefixIRIs) {\n        IRIlist += IRIlist ? `|${prefixIRI}` : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + this._prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp(`^(?:${prefixList})[^\\/]*$|` +\n                                     `^(${IRIlist})([a-zA-Z][\\\\-_a-zA-Z0-9]*)$`);\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  }\n\n  // ### `blank` creates a blank node with the given content\n  blank(predicate, object) {\n    let children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(Term(\"predicate\"), Term(\"object\"))\n    else if (predicate.termType)\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return new SerializedTerm('[]');\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (!(child.object instanceof SerializedTerm))\n        return new SerializedTerm(`[ ${this._encodePredicate(child.predicate)} ${\n                                  this._encodeObject(child.object)} ]`);\n    // Generate a multi-triple or nested blank node\n    default:\n      let contents = '[';\n      // Write all triples in order\n      for (let i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate.equals(predicate))\n          contents += `, ${this._encodeObject(child.object)}`;\n        // Otherwise, write the predicate and the object\n        else {\n          contents += `${(i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate)} ${\n                      this._encodeObject(child.object)}`;\n          predicate = child.predicate;\n        }\n      }\n      return new SerializedTerm(`${contents}\\n]`);\n    }\n  }\n\n  // ### `list` creates a list node with the given content\n  list(elements) {\n    const length = elements && elements.length || 0, contents = new Array(length);\n    for (let i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return new SerializedTerm(`(${contents.join(' ')})`);\n  }\n\n  // ### `end` signals the end of the output stream\n  end(done) {\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    let singleDone = done && ((error, result) => { singleDone = null, done(error, result); });\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  }\n}\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  let result = escapedCharacters[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n","// **N3Util** provides N3 utility functions.\n\nimport N3DataFactory from './N3DataFactory';\n\n// Tests whether the given term represents an IRI\nexport function isNamedNode(term) {\n  return !!term && term.termType === 'NamedNode';\n}\n\n// Tests whether the given term represents a blank node\nexport function isBlankNode(term) {\n  return !!term && term.termType === 'BlankNode';\n}\n\n// Tests whether the given term represents a literal\nexport function isLiteral(term) {\n  return !!term && term.termType === 'Literal';\n}\n\n// Tests whether the given term represents a variable\nexport function isVariable(term) {\n  return !!term && term.termType === 'Variable';\n}\n\n// Tests whether the given term represents the default graph\nexport function isDefaultGraph(term) {\n  return !!term && term.termType === 'DefaultGraph';\n}\n\n// Tests whether the given quad is in the default graph\nexport function inDefaultGraph(quad) {\n  return isDefaultGraph(quad.graph);\n}\n\n// Creates a function that prepends the given IRI to a local name\nexport function prefix(iri, factory) {\n  return prefixes({ '': iri }, factory)('');\n}\n\n// Creates a function that allows registering and expanding prefixes\nexport function prefixes(defaultPrefixes, factory) {\n  // Add all of the default prefixes\n  const prefixes = Object.create(null);\n  for (const prefix in defaultPrefixes)\n    processPrefix(prefix, defaultPrefixes[prefix]);\n  // Set the default factory if none was specified\n  factory = factory || N3DataFactory;\n\n  // Registers a new prefix (if an IRI was specified)\n  // or retrieves a function that expands an existing prefix (if no IRI was specified)\n  function processPrefix(prefix, iri) {\n    // Create a new prefix if an IRI is specified or the prefix doesn't exist\n    if (typeof iri === 'string') {\n      // Create a function that expands the prefix\n      const cache = Object.create(null);\n      prefixes[prefix] = local => {\n        return cache[local] || (cache[local] = factory.namedNode(iri + local));\n      };\n    }\n    else if (!(prefix in prefixes)) {\n      throw new Error(`Unknown prefix: ${prefix}`);\n    }\n    return prefixes[prefix];\n  }\n  return processPrefix;\n}\n","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","module.exports = require('events').EventEmitter;\n","// **N3Lexer** tokenizes N3 documents.\nimport namespaces from './IRIs';\nimport queueMicrotask from 'queue-microtask';\n\nconst { xsd } = namespaces;\n\n// Regular expression and replacement string to escape N3 strings\nconst escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\([^])/g;\nconst escapeReplacements = {\n  '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n  'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n  '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n  '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n  '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n};\nconst illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\nconst lineModeRegExps = {\n  _iri: true,\n  _unescapedIri: true,\n  _simpleQuotedString: true,\n  _langcode: true,\n  _blank: true,\n  _newline: true,\n  _comment: true,\n  _whitespace: true,\n  _endOfFile: true,\n};\nconst invalidRegExp = /$0^/;\n\n// ## Constructor\nexport default class N3Lexer {\n  constructor(options) {\n    // ## Regular expressions\n    // It's slightly faster to have these as properties than as in-scope variables\n    this._iri = /^<((?:[^ <>{}\\\\]|\\\\[uU])+)>[ \\t]*/; // IRI with escape sequences; needs sanity check after unescaping\n    this._unescapedIri = /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>[ \\t]*/; // IRI without escape sequences; no unescaping\n    this._simpleQuotedString = /^\"([^\"\\\\\\r\\n]*)\"(?=[^\"])/; // string without escape sequences\n    this._simpleApostropheString = /^'([^'\\\\\\r\\n]*)'(?=[^'])/;\n    this._langcode = /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i;\n    this._prefix = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/;\n    this._prefixed = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?:[ \\t]+|(?=\\.?[,;!\\^\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._variable = /^\\?(?:(?:[A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=[.,;!\\^\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._blank = /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?:[ \\t]+|(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._number = /^[\\-+]?(?:(\\d+\\.\\d*|\\.?\\d+)[eE][\\-+]?|\\d*(\\.)?)\\d+(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._boolean = /^(?:true|false)(?=[.,;\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._keyword = /^@[a-z]+(?=[\\s#<:])/i;\n    this._sparqlKeyword = /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<])/i;\n    this._shortPredicates = /^a(?=[\\s()\\[\\]\\{\\}\"'<>])/;\n    this._newline = /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/;\n    this._comment = /#([^\\n\\r]*)/;\n    this._whitespace = /^[ \\t]+/;\n    this._endOfFile = /^(?:#[^\\n\\r]*)?$/;\n    options = options || {};\n\n    // In line mode (N-Triples or N-Quads), only simple features may be parsed\n    if (this._lineMode = !!options.lineMode) {\n      this._n3Mode = false;\n      // Don't tokenize special literals\n      for (const key in this) {\n        if (!(key in lineModeRegExps) && this[key] instanceof RegExp)\n          this[key] = invalidRegExp;\n      }\n    }\n    // When not in line mode, enable N3 functionality by default\n    else {\n      this._n3Mode = options.n3 !== false;\n    }\n    // Don't output comment tokens by default\n    this._comments = !!options.comments;\n    // Cache the last tested closing position of long literals\n    this._literalClosingPos = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback\n  _tokenizeToEnd(callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually\n    let input = this._input;\n    const outputComments = this._comments;\n    while (true) {\n      // Count and skip whitespace lines\n      let whiteSpaceMatch, comment;\n      while (whiteSpaceMatch = this._newline.exec(input)) {\n        // Try to find a comment\n        if (outputComments && (comment = this._comment.exec(whiteSpaceMatch[0])))\n          callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n        // Advance the input\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n        this._line++;\n      }\n      // Skip whitespace on current line\n      if (!whiteSpaceMatch && (whiteSpaceMatch = this._whitespace.exec(input)))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF\n        if (inputFinished) {\n          // Try to find a final comment\n          if (outputComments && (comment = this._comment.exec(input)))\n            callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n          callback(input = null, { line: this._line, type: 'eof', value: '', prefix: '' });\n        }\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character\n      const line = this._line, firstChar = input[0];\n      let type = '', value = '', prefix = '',\n          match = null, matchLength = 0, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // We need at least 3 tokens lookahead to distinguish ^^<IRI> and ^^pre:fixed\n        if (input.length < 3)\n          break;\n        // Try to match a type\n        else if (input[1] === '^') {\n          this._previousMarker = '^^';\n          // Move to type IRI or prefixed name\n          input = input.substr(2);\n          if (input[0] !== '<') {\n            inconclusive = true;\n            break;\n          }\n        }\n        // If no type, it must be a path expression\n        else {\n          if (this._n3Mode) {\n            matchLength = 1;\n            type = '^';\n          }\n          break;\n        }\n        // Fall through in case the type is an IRI\n      case '<':\n        // Try to find a full IRI without escape sequences\n        if (match = this._unescapedIri.exec(input))\n          type = 'IRI', value = match[1];\n        // Try to find a full IRI with escape sequences\n        else if (match = this._iri.exec(input)) {\n          value = this._unescape(match[1]);\n          if (value === null || illegalIriChars.test(value))\n            return reportSyntaxError(this);\n          type = 'IRI';\n        }\n        // Try to find a nested triple\n        else if (input.length > 1 && input[1] === '<')\n          type = '<<', matchLength = 2;\n        // Try to find a backwards implication arrow\n        else if (this._n3Mode && input.length > 1 && input[1] === '=')\n          type = 'inverse', matchLength = 2, value = '>';\n        break;\n\n      case '>':\n        if (input.length > 1 && input[1] === '>')\n          type = '>>', matchLength = 2;\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a blank node.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(`${input} `)))\n          type = 'blank', prefix = '_', value = match[1];\n        break;\n\n      case '\"':\n        // Try to find a literal without escape sequences\n        if (match = this._simpleQuotedString.exec(input))\n          value = match[1];\n        // Try to find a literal wrapped in three pairs of quotes\n        else {\n          ({ value, matchLength } = this._parseLiteral(input));\n          if (value === null)\n            return reportSyntaxError(this);\n        }\n        if (match !== null || matchLength !== 0) {\n          type = 'literal';\n          this._literalClosingPos = 0;\n        }\n        break;\n\n      case \"'\":\n        if (!this._lineMode) {\n          // Try to find a literal without escape sequences\n          if (match = this._simpleApostropheString.exec(input))\n            value = match[1];\n          // Try to find a literal wrapped in three pairs of quotes\n          else {\n            ({ value, matchLength } = this._parseLiteral(input));\n            if (value === null)\n              return reportSyntaxError(this);\n          }\n          if (match !== null || matchLength !== 0) {\n            type = 'literal';\n            this._literalClosingPos = 0;\n          }\n        }\n        break;\n\n      case '?':\n        // Try to find a variable\n        if (this._n3Mode && (match = this._variable.exec(input)))\n          type = 'var', value = match[0];\n        break;\n\n      case '@':\n        // Try to find a language code\n        if (this._previousMarker === 'literal' && (match = this._langcode.exec(input)))\n          type = 'langcode', value = match[1];\n        // Try to find a keyword\n        else if (match = this._keyword.exec(input))\n          type = match[0];\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot)\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a number.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if (match = this._number.exec(input) ||\n            inputFinished && (match = this._number.exec(`${input} `))) {\n          type = 'literal', value = match[0];\n          prefix = (typeof match[1] === 'string' ? xsd.double :\n                    (typeof match[2] === 'string' ? xsd.decimal : xsd.integer));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean\n        if (match = this._boolean.exec(input))\n          type = 'literal', value = match[0], prefix = xsd.boolean;\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate\n        if (match = this._shortPredicates.exec(input))\n          type = 'abbreviation', value = 'a';\n        else\n          inconclusive = true;\n        break;\n\n      case '=':\n        // Try to find an implication arrow or equals sign\n        if (this._n3Mode && input.length > 1) {\n          type = 'abbreviation';\n          if (input[1] !== '>')\n            matchLength = 1, value = '=';\n          else\n            matchLength = 2, value = '>';\n        }\n        break;\n\n      case '!':\n        if (!this._n3Mode)\n          break;\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '{':\n      case '}':\n        if (!this._lineMode) {\n          matchLength = 1;\n          type = firstChar;\n        }\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more\n      if (inconclusive) {\n        // Try to find a prefix\n        if ((this._previousMarker === '@prefix' || this._previousMarker === 'PREFIX') &&\n            (match = this._prefix.exec(input)))\n          type = 'prefix', value = match[1] || '';\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(`${input} `)))\n          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read\n      if (this._previousMarker === '^^') {\n        switch (type) {\n        case 'prefixed': type = 'type';    break;\n        case 'IRI':      type = 'typeIRI'; break;\n        default:         type = '';\n        }\n      }\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token\n      const token = { line: line, type: type, value: value, prefix: prefix };\n      callback(null, token);\n      this.previousToken = token;\n      this._previousMarker = type;\n      // Advance to next part to tokenize\n      input = input.substr(matchLength || match[0].length, input.length);\n    }\n\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  }\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters\n  _unescape(item) {\n    let invalid = false;\n    const replaced = item.replace(escapeSequence, (sequence, unicode4, unicode8, escapedChar) => {\n      // 4-digit unicode character\n      if (typeof unicode4 === 'string')\n        return String.fromCharCode(Number.parseInt(unicode4, 16));\n      // 8-digit unicode character\n      if (typeof unicode8 === 'string') {\n        let charCode = Number.parseInt(unicode8, 16);\n        return charCode <= 0xFFFF ? String.fromCharCode(Number.parseInt(unicode8, 16)) :\n          String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n      }\n      // fixed escape sequence\n      if (escapedChar in escapeReplacements)\n        return escapeReplacements[escapedChar];\n      // invalid escape sequence\n      invalid = true;\n      return '';\n    });\n    return invalid ? null : replaced;\n  }\n\n  // ### `_parseLiteral` parses a literal into an unescaped value\n  _parseLiteral(input) {\n    // Ensure we have enough lookahead to identify triple-quoted strings\n    if (input.length >= 3) {\n      // Identify the opening quote(s)\n      const opening = input.match(/^(?:\"\"\"|\"|'''|'|)/)[0];\n      const openingLength = opening.length;\n\n      // Find the next candidate closing quotes\n      let closingPos = Math.max(this._literalClosingPos, openingLength);\n      while ((closingPos = input.indexOf(opening, closingPos)) > 0) {\n        // Count backslashes right before the closing quotes\n        let backslashCount = 0;\n        while (input[closingPos - backslashCount - 1] === '\\\\')\n          backslashCount++;\n\n        // An even number of backslashes (in particular 0)\n        // means these are actual, non-escaped closing quotes\n        if (backslashCount % 2 === 0) {\n          // Extract and unescape the value\n          const raw = input.substring(openingLength, closingPos);\n          const lines = raw.split(/\\r\\n|\\r|\\n/).length - 1;\n          const matchLength = closingPos + openingLength;\n          // Only triple-quoted strings can be multi-line\n          if (openingLength === 1 && lines !== 0 ||\n              openingLength === 3 && this._lineMode)\n            break;\n          this._line += lines;\n          return { value: this._unescape(raw), matchLength };\n        }\n        closingPos++;\n      }\n      this._literalClosingPos = input.length - openingLength + 1;\n    }\n    return { value: '', matchLength: 0 };\n  }\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError(issue) {\n    this._input = null;\n    const err = new Error(`Unexpected \"${issue}\" on line ${this._line}.`);\n    err.context = {\n      token: undefined,\n      line: this._line,\n      previousToken: this.previousToken,\n    };\n    return err;\n  }\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize(input, callback) {\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end\n    if (typeof input === 'string') {\n      this._input = input;\n      // If a callback was passed, asynchronously call it\n      if (typeof callback === 'function')\n        queueMicrotask(() => this._tokenizeToEnd(callback, true));\n      // If no callback was passed, tokenize synchronously and return\n      else {\n        const tokens = [];\n        let error;\n        this._tokenizeToEnd((e, t) => e ? (error = e) : tokens.push(t), true);\n        if (error) throw error;\n        return tokens;\n      }\n    }\n    // Otherwise, the input must be a stream\n    else {\n      this._input = '';\n      this._pendingBuffer = null;\n      if (typeof input.setEncoding === 'function')\n        input.setEncoding('utf8');\n      // Adds the data chunk to the buffer and parses as far as possible\n      input.on('data', data => {\n        if (this._input !== null && data.length !== 0) {\n          // Prepend any previous pending writes\n          if (this._pendingBuffer) {\n            data = Buffer.concat([this._pendingBuffer, data]);\n            this._pendingBuffer = null;\n          }\n          // Hold if the buffer ends in an incomplete unicode sequence\n          if (data[data.length - 1] & 0x80) {\n            this._pendingBuffer = data;\n          }\n          // Otherwise, tokenize as far as possible\n          else {\n            this._input += data;\n            this._tokenizeToEnd(callback, false);\n          }\n        }\n      });\n      // Parses until the end\n      input.on('end', () => {\n        if (this._input !== null)\n          this._tokenizeToEnd(callback, true);\n      });\n      input.on('error', callback);\n    }\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n","const RDF  = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    XSD  = 'http://www.w3.org/2001/XMLSchema#',\n    SWAP = 'http://www.w3.org/2000/10/swap/';\n\nexport default {\n  xsd: {\n    decimal: `${XSD}decimal`,\n    boolean: `${XSD}boolean`,\n    double:  `${XSD}double`,\n    integer: `${XSD}integer`,\n    string:  `${XSD}string`,\n  },\n  rdf: {\n    type:       `${RDF}type`,\n    nil:        `${RDF}nil`,\n    first:      `${RDF}first`,\n    rest:       `${RDF}rest`,\n    langString: `${RDF}langString`,\n  },\n  owl: {\n    sameAs: 'http://www.w3.org/2002/07/owl#sameAs',\n  },\n  r: {\n    forSome: `${SWAP}reify#forSome`,\n    forAll:  `${SWAP}reify#forAll`,\n  },\n  log: {\n    implies: `${SWAP}log#implies`,\n  },\n};\n"],"sourceRoot":""}